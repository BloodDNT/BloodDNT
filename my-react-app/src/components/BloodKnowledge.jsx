import React, { useContext, useState, useEffect, useRef } from 'react';
import { UserContext } from '../context/UserContext';
import { Link, useNavigate } from 'react-router-dom';
import './BloodKnowledge.css';

export default function BloodKnowledge() {
  const { user, logout } = useContext(UserContext);
  const navigate = useNavigate();
  const [isOpen, setIsOpen] = useState(false);
  const containerRef = useRef(null);
  const sectionRefs = useRef([]);
  const footerRef = useRef(null);
  const timeoutRef = useRef(null); // Ref ƒë·ªÉ qu·∫£n l√Ω timeout

  useEffect(() => {
    // Cu·ªôn l√™n ƒë·∫ßu trang khi render
    window.scrollTo(0, 0);

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    if (containerRef.current) {
      observer.observe(containerRef.current);
    }

    sectionRefs.current.forEach((section) => {
      if (section) observer.observe(section);
    });

    if (footerRef.current) {
      observer.observe(footerRef.current);
    }

    return () => {
      if (containerRef.current) {
        observer.unobserve(containerRef.current);
      }
      sectionRefs.current.forEach((section) => {
        if (section) observer.unobserve(section);
      });
      if (footerRef.current) {
        observer.unobserve(footerRef.current);
      }
    };
  }, []);

  const handleToggleDropdown = () => {
    setIsOpen((prev) => !prev); // Toggle dropdown khi click
  };

  const handleMouseEnter = () => {
    clearTimeout(timeoutRef.current); // X√≥a timeout khi chu·ªôt v√†o
    setIsOpen(true);
  };

  const handleMouseLeave = () => {
    // Tr√¨ ho√£n ƒë√≥ng dropdown 300ms
    timeoutRef.current = setTimeout(() => {
      setIsOpen(false);
    }, 300);
  };

  const handleDropdownMouseEnter = () => {
    clearTimeout(timeoutRef.current); // Gi·ªØ dropdown m·ªü khi chu·ªôt ·ªü trong
  };

  const handleDropdownMouseLeave = () => {
    // ƒê√≥ng dropdown sau 300ms khi chu·ªôt r·ªùi
    timeoutRef.current = setTimeout(() => {
      setIsOpen(false);
    }, 300);
  };

  const handleLogout = () => {
    logout();
    navigate('/login');
  };

  return (
    <>
<<<<<<< HEAD
   
        <header className='header'>
               {/* logo */}
               <div className='logo'>
                 <Link to="/">
                   <img src='/LogoPage.jpg' alt='Logo' />
                 </Link>
                 <div className='webname'>Hope Donnorü©∏</div>
               </div>
               {/* menu */}
               <nav className='menu'>
                 <Link to='/bloodguide'>Blood Guide</Link>
                 <div className='dropdown'>
                   <Link to='/bloodknowledge' className='dropbtn'>Blood</Link>
                 </div>
                 <Link to='/news'>News & Events</Link>
                 <Link to='/contact'>Contact</Link>
                 <Link to='/about'>About Us</Link>
               </nav>
               {/* login/user menu */}
               <div className='actions'>
                 {!user ? (
                   <Link to='/login'>
                     <button className='login-btn'>üë§ Login</button>
                   </Link>
                 ) : (
                   <div 
                     className="dropdown user-menu"
                     onMouseEnter={() => setIsOpen(true)}
                     onMouseLeave={() => setIsOpen(false)}
                   >
                     <div className="dropbtn user-name">
                       Xin ch√†o, {user?.FullName || user?.fullName || user?.name || "User"} <span className="ml-2">‚ñº</span>
                     </div>
                     {isOpen && (
                       <div className="dropdown-content user-dropdown">
                        <Link to='/register/request-blood'>Register/Request</Link>
                  <Link to='/my-activities'>List res/req</Link>
                  <Link to='/history'>DonatationHistory</Link>
                  <Link to="/profile">üë§UserProfile</Link>
                  {user?.role === 'Admin' && (
      <Link to="/dashboard">üõ†Ô∏èPath to admin</Link>
    )}
                  <Link to="/notifications">üîîNotification</Link>
                  <button
                    className="logout-btn"
                    onClick={handleLogout}
                  >
                    üö™Logout
                  </button>
                       </div>
                     )}
                   </div>
                 )}
               </div>
             </header> 
=======
      <header className="header">
        <div className="logo">
          <Link to="/">
            <img src="/LogoPage.jpg" alt="Logo" loading="lazy" decoding="async" />
          </Link>
          <div className="webname">Hope Donnorü©∏</div>
        </div>
        <nav className="menu">
          <Link to="/bloodguide">Blood Guide</Link>
          <div className="dropdown">
            <Link to="/bloodknowledge" className="dropbtn">Blood</Link>
          </div>
          <Link to="/news">News & Events</Link>
          <Link to="/contact">Contact</Link>
          <Link to="/about">About Us</Link>
        </nav>
        <div className="actions">
          {!user ? (
            <Link to="/login">
              <button className="login-btn">üë§ Login</button>
            </Link>
          ) : (
            <div
              className="dropdown user-menu"
              onMouseEnter={handleMouseEnter}
              onMouseLeave={handleMouseLeave}
              onClick={handleToggleDropdown}
            >
              <div className="dropbtn user-name">
                Xin ch√†o, {user?.FullName || user?.fullName || user?.name || 'User'}{' '}
                <span className="ml-2">‚ñº</span>
              </div>
              {isOpen && (
                <div
                  className="dropdown-content user-dropdown"
                  onMouseEnter={handleDropdownMouseEnter}
                  onMouseLeave={handleDropdownMouseLeave}
                >
                  <Link to="/register/request-blood">Register/Request-Blood</Link>
                  <Link to="/my-activities">List res/req</Link>
                  <Link to="/history">DonatationHistory</Link>
                  <Link to="/profile">üë§ Th√¥ng tin c√° nh√¢n</Link>
                  <Link to="/notifications">üîî Th√¥ng b√°o</Link>
                  <button className="logout-btn" onClick={handleLogout}>
                    üö™ ƒêƒÉng xu·∫•t
                  </button>
                </div>
              )}
            </div>
          )}
        </div>
      </header>
>>>>>>> f27524238d48e673c7bec76bbde795549a2088b0

      <div className="body">
        <main className="blood-knowledge-container" ref={containerRef}>
          <h2>Ki·∫øn Th·ª©c V·ªÅ M√°u</h2>
          <section
            className="blood-section"
            ref={(el) => (sectionRefs.current[0] = el)}
          >
            <h3>C√°c Nh√≥m M√°u</h3>
            <figure>
              <img src="/tebaomau3.webp" alt="T·∫ø b√†o m√°u" className="blood-img" loading="lazy" decoding="async" />
              <figcaption className="blood-caption">T·∫ø b√†o m√°u.</figcaption>
            </figure>
            <ul>
              <li>
                <b>Nh√≥m m√°u A</b>: C√≥ kh√°ng nguy√™n A tr√™n b·ªÅ m·∫∑t h·ªìng c·∫ßu.
              </li>
              <li>
                <b>Nh√≥m m√°u B</b>: C√≥ kh√°ng nguy√™n B tr√™n b·ªÅ m·∫∑t h·ªìng c·∫ßu.
              </li>
              <li>
                <b>Nh√≥m m√°u AB</b>: C√≥ c·∫£ kh√°ng nguy√™n A v√† B.
              </li>
              <li>
                <b>Nh√≥m m√°u O</b>: Kh√¥ng c√≥ kh√°ng nguy√™n A, B.
              </li>
            </ul>
            <p>
              Trong m√°u c√≥ ch·∫•t g√¨? Th√†nh ph·∫ßn c·ªßa m√°u bao g·ªìm huy·∫øt c·∫ßu (h·ªìng c·∫ßu,
              b·∫°ch c·∫ßu, ti·ªÉu c·∫ßu) v√† huy·∫øt t∆∞∆°ng. Th√†nh ph·∫ßn c·ªßa huy·∫øt t∆∞∆°ng ch·ªß y·∫øu
              l√† n∆∞·ªõc (chi·∫øm ƒë·∫øn 92%) v√† c√°c ch·∫•t quan tr·ªçng kh√°c nh∆∞:
              <br />
              Y·∫øu t·ªë ƒë√¥ng m√°u
              <br />
              Kh√°ng th·ªÉ
              <br />
              ƒê∆∞·ªùng glucoza
              <br />
              Hormone
              <br />
              Ch·∫•t ƒë·∫°m (protein)
              <br />
              Mu·ªëi kho√°ng
              <br />
              Ch·∫•t b√©o
              <br />
              Vitamin
            </p>
          </section>
          <section
            className="blood-section"
            ref={(el) => (sectionRefs.current[1] = el)}
          >
            <h3>H·ªìng C·∫ßu (Red Blood Cells)</h3>
            <figure>
              <img src="/hongcau.webp" alt="H·ªìng c·∫ßu" className="blood-img" loading="lazy" decoding="async" />
              <figcaption className="blood-caption">
                H·ªìng c·∫ßu chi·∫øm s·ªë l∆∞·ª£ng nhi·ªÅu nh·∫•t trong s·ªë c√°c lo·∫°i t·∫ø b√†o m√°u.
              </figcaption>
            </figure>
            <p>
              C√°c t·∫ø b√†o h·ªìng c·∫ßu c√≥ m√†u ƒë·ªè t∆∞∆°i do ch·ª©a huy·∫øt s·∫Øc t·ªë v√† chi·∫øm h∆°n
              40% th·ªÉ t√≠ch c·ªßa m√°u. S·ªë l∆∞·ª£ng h·ªìng c·∫ßu b√¨nh th∆∞·ªùng l√† 4,5 ‚Äì 6,2
              tri·ªáu/¬µL ·ªü nam v√† 4,0 ‚Äì 5,2 tri·ªáu/¬µL ·ªü n·ªØ.
              <br />
              H·ªìng c·∫ßu c√≥ h√¨nh d·∫°ng ƒëƒ©a, hai m·∫∑t l√µm v·ªõi t√¢m d·∫πt. Vi·ªác s·∫£n xu·∫•t h·ªìng
              c·∫ßu ƒë∆∞·ª£c ki·ªÉm so√°t b·ªüi erythropoietin (hormone ƒë∆∞·ª£c s·∫£n xu·∫•t ch·ªß y·∫øu
              b·ªüi th·∫≠n). C√°c t·∫ø b√†o h·ªìng c·∫ßu h√¨nh th√†nh t·ª´ t·∫ø b√†o g·ªëc ƒë·∫ßu d√≤ng h·ªìng
              c·∫ßu trong t·ªßy x∆∞∆°ng, sau khi tr∆∞·ªüng th√†nh (kho·∫£ng 7 ng√†y) s·∫Ω ƒë∆∞·ª£c gi·∫£i
              ph√≥ng v√†o m√°u.
              <br />
              Kh√¥ng gi·ªëng nh∆∞ nhi·ªÅu t·∫ø b√†o kh√°c, h·ªìng c·∫ßu kh√¥ng c√≥ nh√¢n v√† c√≥ th·ªÉ d·ªÖ
              d√†ng thay ƒë·ªïi h√¨nh d·∫°ng ƒë·ªÉ ƒëi qua c√°c m·∫°ch m√°u kh√°c nhau trong c∆° th·ªÉ.
              Vi·ªác thi·∫øu nh√¢n khi·∫øn t·∫ø b√†o h·ªìng c·∫ßu tr·ªü n√™n linh ho·∫°t h∆°n. Tuy nhi√™n,
              ƒëi·ªÅu n√†y g√¢y ·∫£nh h∆∞·ªüng tu·ªïi th·ªç c·ªßa t·∫ø b√†o khi h·ªìng c·∫ßu di chuy·ªÉn qua
              c√°c m·∫°ch m√°u nh·ªè nh·∫•t, ph√° h·ªèng m√†ng t·∫ø b√†o v√† l√†m c·∫°n ki·ªát ngu·ªìn cung
              c·∫•p nƒÉng l∆∞·ª£ng cho t·∫ø b√†o.
              <br />
              Trung b√¨nh h·ªìng c·∫ßu ch·ªâ t·ªìn t·∫°i ƒë∆∞·ª£c 120 ng√†y. H·ªìng c·∫ßu gi√† b·ªã ti√™u h·ªßy
              ch·ªß y·∫øu ·ªü l√°ch v√† gan. T·ªßy x∆∞∆°ng s·∫£n sinh c√°c h·ªìng c·∫ßu m·ªõi ƒë·ªÉ thay th·∫ø
              v√† duy tr√¨ l∆∞·ª£ng h·ªìng c·∫ßu ·ªïn ƒë·ªãnh trong c∆° th·ªÉ.
            </p>
          </section>
          <section
            className="blood-section"
            ref={(el) => (sectionRefs.current[2] = el)}
          >
            <h3>B·∫°ch C·∫ßu (White Blood Cells)</h3>
            <figure>
              <img src="/bachcau.jpg" alt="B·∫°ch c·∫ßu" className="blood-img" loading="lazy" decoding="async" />
              <figcaption className="blood-caption">
                T·∫ø b√†o b·∫°ch c·∫ßu ch·ªâ chi·∫øm kho·∫£ng 1% t·ªïng l∆∞·ª£ng m√°u.
              </figcaption>
            </figure>
            <p>
              T·∫ø b√†o b·∫°ch c·∫ßu trong m√°u l√† m·ªôt ph·∫ßn quan tr·ªçng c·ªßa h·ªá th·ªëng mi·ªÖn d·ªãch
              t·ª± nhi√™n c·ªßa c∆° th·ªÉ nh∆∞ng ch·ªâ chi·∫øm kho·∫£ng 1% t·ªïng l∆∞·ª£ng m√°u. S·ªë l∆∞·ª£ng
              b·∫°ch c·∫ßu trong m·ªôt microlit m√°u th∆∞·ªùng dao ƒë·ªông t·ª´ 3.700 -10.500/¬µL. S·ªë
              l∆∞·ª£ng b·∫°ch c·∫ßu cao h∆°n ho·∫∑c th·∫•p h∆°n so v·ªõi l∆∞·ª£ng trung b√¨nh c√≥ th·ªÉ l√†
              d·∫•u hi·ªáu c·ªßa m·ªôt b·ªánh l√Ω n√†o ƒë√≥.
            </p>
            <ul>
              Ch·ª©c nƒÉng ch√≠nh c·ªßa b·∫°ch c·∫ßu bao g·ªìm:
              <li>Ch·ªëng l·∫°i c√°c lo·∫°i vi tr√πng kh√°c nhau nh∆∞ vi khu·∫©n, virus</li>
              <li>
                T·∫°o kh√°ng th·ªÉ, l√† nh·ªØng protein ƒë·∫∑c bi·ªát c√≥ kh·∫£ nƒÉng nh·∫≠n bi·∫øt v√†
                lo·∫°i b·ªè c√°c v·∫≠t th·ªÉ l·∫°, c√≥ h·∫°i (nh∆∞ t·∫ø b√†o ch·∫øt, m·∫£nh v·ª•n m√¥ v√† t·∫ø
                b√†o h·ªìng c·∫ßu c≈©,‚Ä¶)
              </li>
              <li>
                B·∫£o v·ªá c∆° th·ªÉ kh·ªèi c√°c v·∫≠t th·ªÉ l·∫° x√¢m nh·∫≠p v√†o m√°u nh∆∞ c√°c ch·∫•t g√¢y
                d·ªã ·ª©ng
              </li>
              <li>Ch·ªëng l·∫°i c√°c t·∫ø b√†o b·ªã thay ƒë·ªïi (ƒë·ªôt bi·∫øn) nh∆∞ ung th∆∞</li>
            </ul>
            <p>
              Th·ªùi gian t·ªìn t·∫°i c·ªßa b·∫°ch c·∫ßu thay ƒë·ªïi t·ª´ v√†i gi·ªù ƒë·∫øn nhi·ªÅu nƒÉm. C√°c
              t·∫ø b√†o b·∫°ch c·∫ßu m·ªõi li√™n t·ª•c ƒë∆∞·ª£c h√¨nh th√†nh ‚Äì m·ªôt s·ªë ·ªü t·ªßy x∆∞∆°ng v√†
              m·ªôt s·ªë ·ªü c√°c b·ªô ph·∫≠n kh√°c c·ªßa c∆° th·ªÉ nh∆∞ l√° l√°ch, tuy·∫øn ·ª©c v√† c√°c h·∫°ch
              b·∫°ch huy·∫øt.
            </p>
            <ul>
              C√°c lo·∫°i t·∫ø b√†o b·∫°ch c·∫ßu bao g·ªìm:
              <li>T·∫ø b√†o lympho</li>
              <li>B·∫°ch c·∫ßu ƒë∆°n nh√¢n</li>
              <li>B·∫°ch c·∫ßu √°i toan</li>
              <li>B·∫°ch c·∫ßu √°i ki·ªÅm</li>
              <li>B·∫°ch c·∫ßu trung t√≠nh</li>
            </ul>
          </section>
          <section
            className="blood-section"
            ref={(el) => (sectionRefs.current[3] = el)}
          >
            <h3>Huy·∫øt T∆∞∆°ng (Plasma)</h3>
            <figure>
              <img src="/huyetuong.jpg" alt="Huy·∫øt T∆∞∆°ng" className="blood-img" loading="lazy" decoding="async" />
              <figcaption className="blood-caption">Huy·∫øt T∆∞∆°ng.</figcaption>
            </figure>
            <p>
              Huy·∫øt t∆∞∆°ng l√† th√†nh ph·∫ßn v√¥ c√πng quan tr·ªçng, k·∫øt c·∫•u d·∫°ng ch·∫•t l·ªèng
              m√†u v√†ng v√† ch·ª©a h∆°n 90% n∆∞·ªõc. Ngo√†i ra h·ªón h·ª£p huy·∫øt t∆∞∆°ng c√≤n ch·ª©a
              ƒë∆∞·ªùng, ch·∫•t b√©o, protein v√† mu·ªëi kho√°ng, c√°c men,‚Ä¶ C√°c t·∫ø b√†o m√°u s·∫Ω
              l∆° l·ª≠ng trong huy·∫øt t∆∞∆°ng.
              <br />
              N∆∞·ªõc trong huy·∫øt t∆∞∆°ng c√≥ th·ªÉ trao ƒë·ªïi t·ª± do v·ªõi t·∫ø b√†o c∆° th·ªÉ v√† c√°c
              d·ªãch ngo·∫°i b√†o kh√°c. Ph·∫ßn n∆∞·ªõc trong huy·∫øt t∆∞∆°ng lu√¥n c√≥ s·∫µn ƒë·ªÉ gi√∫p c√°c
              m√¥ trong c∆° th·ªÉ duy tr√¨ tr·∫°ng th√°i hydrat h√≥a b√¨nh th∆∞·ªùng.
              <br />
              Huy·∫øt t∆∞∆°ng c√≥ ch·ª©c nƒÉng v·∫≠n chuy·ªÉn c√°c t·∫ø b√†o m√°u ƒëi kh·∫Øp c∆° th·ªÉ c√πng
              v·ªõi c√°c ch·∫•t dinh d∆∞·ª°ng, ch·∫•t th·∫£i, kh√°ng th·ªÉ, protein ƒë√¥ng m√°u, ch·∫•t
              truy·ªÅn tin h√≥a h·ªçc nh∆∞ hormone v√† protein gi√∫p duy tr√¨ c√¢n b·∫±ng ch·∫•t
              l·ªèng c·ªßa c∆° th·ªÉ.
              <br />
              Huy·∫øt t∆∞∆°ng ch·ª©a c√°c protein, chi·∫øm kho·∫£ng 7% tr·ªçng l∆∞·ª£ng. S·ª± kh√°c bi·ªát
              gi·ªØa huy·∫øt t∆∞∆°ng v√† d·ªãch ngo·∫°i b√†o c·ªßa m√¥ l√† h√†m l∆∞·ª£ng protein cao trong
              huy·∫øt t∆∞∆°ng. Protein huy·∫øt t∆∞∆°ng t·∫°o ra hi·ªáu ·ª©ng th·∫©m th·∫•u khi·∫øn n∆∞·ªõc c√≥
              xu h∆∞·ªõng di chuy·ªÉn t·ª´ d·ªãch ngo·∫°i b√†o v√†o huy·∫øt t∆∞∆°ng. Ph·∫ßn l·ªõn protein
              huy·∫øt t∆∞∆°ng ƒë∆∞·ª£c s·∫£n xu·∫•t ·ªü gan.
              <br />
              Protein huy·∫øt t∆∞∆°ng ch·ªß y·∫øu l√† albumin, m·ªôt ph√¢n t·ª≠ t∆∞∆°ng ƒë·ªëi nh·ªè c√≥
              ch·ª©c nƒÉng ch√≠nh l√† gi·ªØ n∆∞·ªõc trong m√°u nh·ªù t√°c d·ª•ng th·∫©m th·∫•u. L∆∞·ª£ng
              albumin trong m√°u l√† y·∫øu t·ªë quy·∫øt ƒë·ªãnh t·ªïng th·ªÉ t√≠ch huy·∫øt t∆∞∆°ng. S·ª± suy
              gi·∫£m albumin l√†m cho ch·∫•t l·ªèng r·ªùi kh·ªèi tu·∫ßn ho√†n v√† t√≠ch t·ª•, g√¢y s∆∞ng
              m√¥ m·ªÅm (ph√π n·ªÅ). Albumin li√™n k·∫øt v·ªõi m·ªôt s·ªë ch·∫•t kh√°c ƒë∆∞·ª£c v·∫≠n chuy·ªÉn
              trong huy·∫øt t∆∞∆°ng n√™n ƒë√≥ng vai tr√≤ l√† protein v·∫≠n chuy·ªÉn kh√¥ng ƒë·∫∑c hi·ªáu.
            </p>
          </section>
          <section
            className="blood-section"
            ref={(el) => (sectionRefs.current[4] = el)}
          >
            <h3>Ti·ªÉu C·∫ßu (Platelets)</h3>
            <figure>
              <img src="/tieucau.png" alt="Ti·ªÉu c·∫ßu" className="blood-img" loading="lazy" decoding="async" />
              <figcaption className="blood-caption">Ti·ªÉu c·∫ßu.</figcaption>
            </figure>
            <p>
              Kh√¥ng gi·ªëng nh∆∞ h·ªìng c·∫ßu v√† b·∫°ch c·∫ßu, ti·ªÉu c·∫ßu th·ª±c ch·∫•t kh√¥ng ph·∫£i l√†
              t·∫ø b√†o m√† l√† nh·ªØng m·∫£nh t·∫ø b√†o nh·ªè, c√≥ h√¨nh b·∫ßu d·ª•c. C√≥ t·ª´ 150.000
              ƒë·∫øn 400.000 ti·ªÉu c·∫ßu/¬µL. Tuy nhi√™n, ti·ªÉu c·∫ßu ch·ªâ t·ªìn t·∫°i kho·∫£ng 9 ng√†y
              trong m√°u v√† li√™n t·ª•c ƒë∆∞·ª£c thay th·∫ø b·∫±ng ti·ªÉu c·∫ßu m·ªõi do t·ªßy x∆∞∆°ng t·∫°o
              ra.
              <br />
              Ch·ª©c nƒÉng ch√≠nh c·ªßa ti·ªÉu c·∫ßu l√† tham gia qu√° tr√¨nh ƒë√¥ng c·∫ßm m√°u. Ngo√†i
              ra, ti·ªÉu c·∫ßu c√≤n l√†m cho th√†nh m·∫°ch m√°u m·ªÅm m·∫°i, d·∫ªo dai h∆°n nh·ªù ch·ª©c
              nƒÉng l√†m ‚Äútr·∫ª h√≥a‚Äù t·∫ø b√†o n·ªôi m·∫°c.
              <br />
              Khi m·∫°ch m√°u b·ªã v·ª°, ti·ªÉu c·∫ßu s·∫Ω t·∫≠p trung t·∫°i v·ªã tr√≠ v·∫øt th∆∞∆°ng, d√≠nh
              v√†o ni√™m m·∫°c m·∫°ch m√°u b·ªã th∆∞∆°ng nh·∫±m b·ªãt k√≠n ch·ªó m√°u ch·∫£y. Ti·ªÉu c·∫ßu k·∫øt
              h·ª£p v·ªõi c√°c protein t·∫°o s·ª± ƒë√¥ng m√°u, ki·ªÉm so√°t ch·∫£y m√°u b√™n trong c∆° th·ªÉ
              v√† tr√™n da.
              <br />
              Qu√° tr√¨nh t·∫≠p h·ª£p c√°c ti·ªÉu c·∫ßu t·∫°i m·ªôt v·ªã tr√≠ nh·∫•t ƒë·ªãnh s·∫Ω h√¨nh th√†nh
              c·ª•c m√°u ƒë√¥ng. C·ª•c m√°u ƒë√¥ng ch√≠nh l√† n·ªÅn t·∫£ng ƒë·ªÉ h√¨nh th√†nh m√¥ m·ªõi v√†
              th√∫c ƒë·∫©y qu√° tr√¨nh l√†nh v·∫øt th∆∞∆°ng.
              <br />
              Tuy nhi√™n, c·∫ßn l∆∞u √Ω s·ªë l∆∞·ª£ng ti·ªÉu c·∫ßu cao h∆°n b√¨nh th∆∞·ªùng c√≥ th·ªÉ g√¢y
              ƒë√¥ng m√°u kh√¥ng c·∫ßn thi·∫øt, d·∫´n ƒë·∫øn nh·ªØng c∆°n ƒëau tim v√† ƒë·ªôt qu·ªµ. Ng∆∞·ª£c
              l·∫°i, s·ªë l∆∞·ª£ng ti·ªÉu c·∫ßu th·∫•p h∆°n b√¨nh th∆∞·ªùng c√≥ th·ªÉ d·∫´n ƒë·∫øn ch·∫£y m√°u
              nhi·ªÅu, kh√≥ c·∫ßm m√°u.
            </p>
          </section>
        </main>
        <div className="external-link" style={{ textAlign: 'center', margin: '32px 0' }}>
          <a
            href="https://tamanhhospital.vn/co-the-nguoi/mau/"
            target="_blank"
            rel="noopener noreferrer"
            className="external-link-anchor"
          >
            T√¨m hi·ªÉu th√™m v·ªÅ m√°u t·∫°i T√¢m Anh Hospital
          </a>
        </div>
        <section className="footer" ref={footerRef}>
          <div className="footer-container">
            <div className="footer-block location">
              <h3>üìç Location</h3>
              <p>Blood Donation Center, FPT University, Q9, TP.HCM</p>
            </div>
            <div className="footer-block hotline">
              <h3>üìû Hotline</h3>
              <p>+84 123 456 789</p>
              <p>+84 123 456 987</p>
            </div>
            <div className="footer-block social-media">
              <h3>üåê Follow Us</h3>
              <ul>
                <li>
                  <a href="https://facebook.com" target="_blank" rel="noreferrer">
                    Facebook
                  </a>
                </li>
                <li>
                  <a href="https://instagram.com" target="_blank" rel="noreferrer">
                    Instagram
                  </a>
                </li>
                <li>
                  <a href="https://twitter.com" target="_blank" rel="noreferrer">
                    Twitter
                  </a>
                </li>
              </ul>
            </div>
          </div>
          <p className="footer-copy">¬© 2025 HopeDonor. All rights reserved.</p>
        </section>
      </div>
    </>
  );
}