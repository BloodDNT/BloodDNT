import React, { useContext, useState, useEffect, useRef } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { UserContext } from '../context/UserContext.jsx';
import axios from 'axios';
import './newpost.css';

export default function BloodDonationBenefits() {
  const { user, logout } = useContext(UserContext);
  const navigate = useNavigate();
  const [isOpen, setIsOpen] = useState(false);
  const footerRef = useRef();
  const sectionRefs = useRef({});
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    message: '',
  });
  const [formStatus, setFormStatus] = useState({
    loading: false,
    success: null,
    error: null,
  });

  // M·ª•c l·ª•c
  const tocItems = [
    { id: 'mental-wellbeing', title: 'Tinh th·∫ßn t√≠ch c·ª±c' },
    { id: 'health-check', title: 'Ki·ªÉm tra s·ª©c kh·ªèe' },
    { id: 'iron-balance', title: 'Gi·∫£m qu√° t·∫£i s·∫Øt' },
    { id: 'new-blood', title: 'TƒÉng t·∫°o m√°u m·ªõi' },
    { id: 'cardiovascular', title: 'Gi·∫£m nguy c∆° tim m·∫°ch' },
    { id: 'calorie-burn', title: 'ƒê·ªët ch√°y calo' },
    { id: 'blood-bank', title: 'Ng√¢n h√†ng m√°u' },
    { id: 'contact', title: 'Li√™n h·ªá' },
  ];

  // H√†m cu·ªôn ƒë·∫øn section
  const scrollToSection = (id) => {
    sectionRefs.current[id]?.scrollIntoView({ behavior: 'smooth' });
  };

  // Hi·ªáu ·ª©ng scroll-reveal
  useEffect(() => {
    const options = { threshold: 0.1 };
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, options);

    const elements = document.querySelectorAll('.scroll-reveal');
    elements.forEach((el) => observer.observe(el));

    if (footerRef.current) observer.observe(footerRef.current);

    return () => {
      elements.forEach((el) => observer.unobserve(el));
      if (footerRef.current) observer.unobserve(footerRef.current);
    };
  }, []);

  // X·ª≠ l√Ω ƒëƒÉng xu·∫•t
  const handleLogout = () => {
    logout();
    navigate('/login');
  };

  // X·ª≠ l√Ω n√∫t "Ki·ªÉm tra ngay"
  const handleCheck = () => {
    if (!user) {
      navigate('/login');
    } else {
      navigate('/register/request-blood');
    }
  };

  // X·ª≠ l√Ω input form
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // X·ª≠ l√Ω g·ª≠i form
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!formData.name || !formData.email || !formData.message) {
      setFormStatus({ loading: false, success: null, error: 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß h·ªç t√™n, email v√† tin nh·∫Øn.' });
      return;
    }
    if (!/\S+@\S+\.\S+/.test(formData.email)) {
      setFormStatus({ loading: false, success: null, error: 'Email kh√¥ng h·ª£p l·ªá.' });
      return;
    }

    setFormStatus({ loading: true, success: null, error: null });

    try {
      await axios.post('http://localhost:5000/api/contact', formData);
      setFormStatus({ loading: false, success: 'G·ª≠i li√™n h·ªá th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm.', error: null });
      setFormData({ name: '', email: '', phone: '', message: '' });
    } catch (error) {
      setFormStatus({
        loading: false,
        success: null,
        error: error.response?.data?.message || 'C√≥ l·ªói x·∫£y ra khi g·ª≠i. Vui l√≤ng th·ª≠ l·∫°i.',
      });
    }
  };

  return (
    <>
      <header className="header">
        <div className="logo">
          <Link to="/">
            <img src="/LogoPage.jpg" alt="Hope Donor Logo" loading="lazy" decoding="async" />
          </Link>
          <div className="webname">Hope Donor ü©∏</div>
        </div>
        <nav className="menu">
          <Link to="/bloodguide">Blood Guide</Link>
          <div className="dropdown">
            <Link to="/bloodknowledge" className="dropbtn">Blood</Link>
          </div>
          <Link to="/news">News & Events</Link>
          <Link to="/contact">Contact</Link>
          <Link to="/about">About Us</Link>
        </nav>
        <div className="actions">
          {!user ? (
            <Link to="/login">
              <button className="login-btn">üë§ Login</button>
            </Link>
          ) : (
            <div
              className="dropdown user-menu"
              onMouseEnter={() => setIsOpen(true)}
              onMouseLeave={() => setIsOpen(false)}
            >
              <div className="dropbtn user-name">
                Xin ch√†o, {user?.FullName || user?.fullName || user?.name || 'User'} <span className="ml-2">‚ñº</span>
              </div>
              {isOpen && (
                <div className="dropdown-content user-dropdown">
                  <Link to="/register/request-blood">Register/Request</Link>
                  <Link to="/my-activities">List res/req</Link>
                  <Link to="/history">Donation History</Link>
                  <Link to="/profile">üë§ User Profile</Link>
                  {user?.role === 'Admin' && (
                    <Link to="/dashboard">üõ†Ô∏è Path to admin</Link>
                  )}
                  <Link to="/notifications">üîî Notification</Link>
                  <button className="logout-btn" onClick={handleLogout}>üö™ ƒêƒÉng xu·∫•t</button>
                </div>
              )}
            </div>
          )}
        </div>
      </header>

      <div className="blood-donation-benefits p-6">
        <h1 className="text-3xl font-bold mb-6 text-center">L·ª£i √çch C·ªßa Hi·∫øn M√°u</h1>
        <p className="text-lg mb-4 text-center">Ng√†y ƒëƒÉng: 22-01-2020</p>
        <img
          src="/news3.jpg"
          alt="L·ª£i √≠ch hi·∫øn m√°u"
          className="hero-image scroll-reveal"
        />

        {/* M·ª•c l·ª•c */}
        <div className="toc scroll-reveal">
          <h2 className="text-2xl font-semibold mb-4">M·ª•c l·ª•c</h2>
          <ul className="list-disc ml-6">
            {tocItems.map((item) => (
              <li
                key={item.id}
                className="text-lg text-blue-600 hover:underline cursor-pointer"
                onClick={() => scrollToSection(item.id)}
              >
                {item.title}
              </li>
            ))}
          </ul>
        </div>

        {/* Gi·ªõi thi·ªáu */}
        <section className="intro scroll-reveal" ref={(el) => (sectionRefs.current['intro'] = el)}>
          <p className="text-lg leading-relaxed mb-4">
            Nhi·ªÅu nghi√™n c·ª©u ƒë√£ ch·ªâ ra nh·ªØng l·ª£i √≠ch b·∫•t ng·ªù n·∫øu b·∫°n hi·∫øn m√°u th∆∞·ªùng xuy√™n. H√£y c√πng t√¨m hi·ªÉu nh·ªØng l·ª£i √≠ch c·ªßa hi·∫øn m√°u n√†y.
          </p>
        </section>

        {/* 1. Tinh th·∫ßn t√≠ch c·ª±c */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['mental-wellbeing'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">1. Tinh th·∫ßn t√≠ch c·ª±c, t√¢m l√Ω tho·∫£i m√°i</h2>
          <p className="text-lg leading-relaxed mb-4">
            Hi·∫øn m√°u ƒëem l·∫°i c·∫£m gi√°c t·ª± h√†o v√† h·∫°nh ph√∫c v√¨ h√†nh ƒë·ªông c·ªßa b·∫°n c√≥ th·ªÉ c·ª©u gi√∫p t√≠nh m·∫°ng c·ªßa ai ƒë√≥. Ph·∫ßn m√°u b·∫°n hi·∫øn ƒë∆∞·ª£c t√°ch th√†nh nhi·ªÅu th√†nh ph·∫ßn theo nhu c·∫ßu c·ªßa b·ªánh nh√¢n, gi√∫p nhi·ªÅu ng∆∞·ªùi nh·∫≠n kh√°c nhau. Ngo√†i ra, hi·∫øn m√°u c√≤n gi√∫p b·∫°n t·ª± tin v√†o s·ª©c kh·ªèe c·ªßa b·∫£n th√¢n, l√† bi·ªÉu hi·ªán c·ªßa m√°u t·ªët v√† s·ª©c kh·ªèe t·ªët.
          </p>
        </section>

        {/* 2. Ki·ªÉm tra s·ª©c kh·ªèe */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['health-check'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">2. Ki·ªÉm tra v√† t∆∞ v·∫•n s·ª©c kh·ªèe</h2>
          <p className="text-lg leading-relaxed mb-4">
            M·ªói l·∫ßn hi·∫øn m√°u, b·∫°n ƒë∆∞·ª£c ki·ªÉm tra s∆° b·ªô s·ª©c kh·ªèe (huy·∫øt √°p, nh·ªãp tim) v√† x√©t nghi·ªám m√°u (vi√™m gan B, C, HIV, giang mai). K·∫øt qu·∫£ x√©t nghi·ªám ƒë∆∞·ª£c th√¥ng b√°o, gi√∫p b·∫°n theo d√µi s·ª©c kh·ªèe. B·ªô Y t·∫ø cung c·∫•p g√≥i x√©t nghi·ªám thay qu√† t·∫∑ng, h·ªó tr·ª£ b·∫°n t·ª± gi√°m s√°t s·ª©c kh·ªèe v√† ph√°t hi·ªán s·ªõm nguy c∆° b·ªánh t·∫≠t.
          </p>
        </section>

        {/* 3. Gi·∫£m qu√° t·∫£i s·∫Øt */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['iron-balance'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">3. Gi·∫£m qu√° t·∫£i s·∫Øt trong c∆° th·ªÉ</h2>
          <p className="text-lg leading-relaxed mb-4">
            Hi·∫øn m√°u gi√∫p gi·∫£m l∆∞·ª£ng s·∫Øt d∆∞ th·ª´a, h·ªó tr·ª£ qu√° tr√¨nh th·∫£i s·∫Øt t·ª± nhi√™n. ƒêi·ªÅu n√†y ƒë·∫∑c bi·ªát c√≥ l·ª£i v√¨ d∆∞ th·ª´a s·∫Øt c√≥ th·ªÉ g√¢y h·∫°i cho c∆° th·ªÉ, v√† hi·∫øn m√°u th∆∞·ªùng xuy√™n gi√∫p c√¢n b·∫±ng l∆∞·ª£ng s·∫Øt.
          </p>
        </section>

        {/* 4. TƒÉng t·∫°o m√°u m·ªõi */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['new-blood'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">4. TƒÉng t·∫°o m√°u m·ªõi</h2>
          <p className="text-lg leading-relaxed mb-4">
            Hi·∫øn m√°u k√≠ch th√≠ch t·ªßy x∆∞∆°ng s·∫£n sinh h·ªìng c·∫ßu m·ªõi ƒë·ªÉ b√π l·∫°i l∆∞·ª£ng m√°u ƒë√£ m·∫•t. Qu√° tr√¨nh n√†y gi√∫p thanh th·∫£i c√°c th√†nh ph·∫ßn nh∆∞ cholesterol, s·∫Øt, kali, gi·∫£m g√°nh n·∫∑ng cho c∆° th·ªÉ.
          </p>
        </section>

        {/* 5. Gi·∫£m nguy c∆° tim m·∫°ch */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['cardiovascular'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">5. Gi·∫£m nguy c∆° ƒë·ªôt qu·ªµ, tim m·∫°ch</h2>
          <p className="text-lg leading-relaxed mb-4">
            Hi·∫øn m√°u gi·∫£m l∆∞·ª£ng s·∫Øt trong m√°u, t·ª´ ƒë√≥ gi·∫£m qu√° tr√¨nh oxy h√≥a cholesterol, h·∫°n ch·∫ø m·∫£ng x∆° v·ªØa m·∫°ch m√°u ‚Äì nguy√™n nh√¢n g√¢y ƒëau tim v√† ƒë·ªôt qu·ªµ. C√°c nghi√™n c·ª©u cho th·∫•y hi·∫øn m√°u th∆∞·ªùng xuy√™n gi·∫£m nguy c∆° b·ªánh tim m·∫°ch.
          </p>
        </section>

        {/* 6. ƒê·ªët ch√°y calo */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['calorie-burn'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">6. ƒê·ªët ch√°y calo v√† h·ªó tr·ª£ gi·∫£m c√¢n</h2>
          <p className="text-lg leading-relaxed mb-4">
            M·ªói l·∫ßn hi·∫øn 450 ml m√°u gi√∫p ƒë·ªët ch√°y kho·∫£ng 650 calo v√† gi·∫£m cholesterol. ƒê√¢y l√† c√°ch h·ªØu √≠ch ƒë·ªÉ h·ªó tr·ª£ gi·∫£m c√¢n cho nh·ªØng ng∆∞·ªùi th·ª´a c√¢n.
          </p>
        </section>

        {/* 7. Ng√¢n h√†ng m√°u */}
        <section className="benefit-item scroll-reveal" ref={(el) => (sectionRefs.current['blood-bank'] = el)}>
          <h2 className="text-2xl font-semibold mb-3">7. G·ª≠i m√°u v√†o ng√¢n h√†ng m√°u</h2>
          <p className="text-lg leading-relaxed mb-4">
            M·ªói l·∫ßn hi·∫øn m√°u, b·∫°n g·ª≠i m√°u v√†o ng√¢n h√†ng m√°u. N·∫øu c·∫ßn nh·∫≠n m√°u, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng gi·∫•y ch·ª©ng nh·∫≠n hi·∫øn m√°u ƒë·ªÉ ƒë∆∞·ª£c b·ªìi ho√†n m√°u mi·ªÖn ph√≠ t·∫°i c√°c c∆° s·ªü y t·∫ø c√¥ng l·∫≠p tr√™n to√†n qu·ªëc.
          </p>
        </section>
 <div className="source-citation scroll-reveal">
          <p>Ngu·ªìn: Vi·ªán huy·∫øt h·ªçc <a href="https://vienhuyethoc.vn/loi-ich-cua-hien-mau/" target="_blank" rel="noreferrer">Healthline, 2025</a></p>
        </div>
        {/* Form li√™n h·ªá */}
        <section className="contact-form scroll-reveal" ref={(el) => (sectionRefs.current['contact'] = el)}>
          <h2 className="text-2xl font-semibold mb-4">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h2>
          <form onSubmit={handleSubmit} className="contact-form-inner">
            <div className="form-group">
              <label htmlFor="name" className="form-label">H·ªç t√™n</label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="form-input"
                placeholder="Nh·∫≠p h·ªç t√™n"
                required
              />
            </div>
            <div className="form-group">
              <label htmlFor="email" className="form-label">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                value={formData.email}
                onChange={handleInputChange}
                className="form-input"
                placeholder="Nh·∫≠p email"
                required
              />
            </div>
            <div className="form-group">
              <label htmlFor="phone" className="form-label">S·ªë ƒëi·ªán tho·∫°i</label>
              <input
                type="tel"
                id="phone"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                className="form-input"
                placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i (t√πy ch·ªçn)"
              />
            </div>
            <div className="form-group">
              <label htmlFor="message" className="form-label">Tin nh·∫Øn</label>
              <textarea
                id="message"
                name="message"
                value={formData.message}
                onChange={handleInputChange}
                className="form-input"
                placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n"
                rows="5"
                required
              ></textarea>
            </div>
            <button type="submit" className="submit-button" disabled={formStatus.loading}>
              {formStatus.loading ? 'ƒêang g·ª≠i...' : 'G·ª≠i li√™n h·ªá'}
            </button>
            {formStatus.success && <p className="form-message success">{formStatus.success}</p>}
            {formStatus.error && <p className="form-message error">{formStatus.error}</p>}
          </form>
        </section>

        {/* CTA */}
        <div className="cta-container scroll-reveal">
          <button className="check-button" onClick={handleCheck}>
            Ki·ªÉm tra ngay
          </button>
        </div>      
      </div>
        <section ref={footerRef} className="footer">
        <div className="footer-container">
          <div className="footer-block location">
            <h3>üìç Location</h3>
            <p>Blood Donation Center, FPT University, Q9, TP.HCM</p>
          </div>
          <div className="footer-block hotline">
            <h3>üìû Hotline</h3>
            <p>+84 123 456 789</p>
            <p>+84 123 456 987</p>
          </div>
          <div className="footer-block social-media">
            <h3>üåê Follow Us</h3>
            <ul>
              <li><a href="https://facebook.com" target="_blank" rel="noreferrer">Facebook</a></li>
              <li><a href="https://instagram.com" target="_blank" rel="noreferrer">Instagram</a></li>
              <li><a href="https://twitter.com" target="_blank" rel="noreferrer">Twitter</a></li>
            </ul>
          </div>
        </div>
        <p className="footer-copy">¬© 2025 HopeDonor. All rights reserved.</p>
      </section>
    </>
  );
}